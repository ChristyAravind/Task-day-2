1.Difference between Browser JS (console) vs Nodejs 

  

JavaScript 

  

JavaScript is a programming language that is used for writing scripts on the website. 

It is basically used on the client-side. 

Javascript is capable enough to add HTML and play with the DOM.  

Javascript can run in any browser engine as like JS core in safari and Spidermonkey in Firefox.  

Javascript is used in frontend development. Some of the javascript frameworks are RamdaJS, TypedJS, etc.  

It is the upgraded version of ECMA script that uses Chromeâ€™s V8 engine written in C++.  

  

NodeJS 

NodeJS is a Javascript runtime environment. 

We can run Javascript outside the browser with the help of NodeJS. 

It is mostly used on the server-side. 

Nodejs does not have capability to add HTML tags. V8 is the Javascript engine inside of node.js that parses and runs Javascript.  

Nodejs is used in server-side development. 

Some of the Nodejs modules are Lodash, express etc. These modules are to be imported from npm.  

Nodejs is written in C, C++ and Javascript. 

  

2. watch & summary 5 points  

  

  

When you open a website, the HTML parser in the browser will look into the raw HTML data and process it to build the DOM tree.  

After that when the parser come across external resources like CSS or JavaScript file, it goes off to fetch those files. The parser will continue as a CSS file is being loaded, although it will block rendering until it has been loaded and parsed. The JavaScript file is loaded in the background.  

The CSS files parsed to build the CSSOM tree just like the DOM tree to process and execute the CSS file in the proper way.  

How and when the JavaScript files are loaded will determine exactly when this happens, but at some point they will be parsed, compiled and executed.  

Merging the DOM tree and CSSOM tree to build the render tree. Now we have a complete render tree the browser knows what to render but not where to render. Therefore the layout of the page must be calculated.  

The rendering engine traverses the render tree, starting at the top and working down, calculating the coordinates at which each node should be displayed.   

Once that is completed, the final step is to take that layout information and paint the pixels to the screen.  

 

4. Execute the below code and write your description in txt file 

  

console.log(typeof(1)); - number 

console.log(typeof(1.1)); - number 

console.log(typeof('1.1')); - string 

console.log(typeof(true)); - boolean 

console.log(typeof(null)); - object 

console.log(typeof(undefined)); - undefined 

console.log(typeof([])); - object 

console.log(typeof({})); - object 

console.log(typeof(NaN)); - number 
